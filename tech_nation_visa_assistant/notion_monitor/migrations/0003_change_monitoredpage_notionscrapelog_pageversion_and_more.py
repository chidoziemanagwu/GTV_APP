# Generated by Django 5.2 on 2025-04-21 23:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('notion_monitor', '0002_usernotification'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=255)),
                ('url', models.URLField(max_length=500)),
                ('description', models.TextField()),
                ('diff_text', models.TextField()),
                ('diff_html', models.TextField()),
                ('change_type', models.CharField(choices=[('major', 'Major Change'), ('minor', 'Minor Change')], default='minor', max_length=10)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-detected_at'],
            },
        ),
        migrations.CreateModel(
            name='MonitoredPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('title', models.CharField(max_length=255)),
                ('last_checked', models.DateTimeField(auto_now=True)),
                ('content_hash', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotionScrapeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('pages_checked', models.IntegerField(default=0)),
                ('changes_detected', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='in_progress', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='PageVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('title', models.CharField(max_length=255)),
                ('content_text', models.TextField()),
                ('content_html', models.TextField()),
                ('content_hash', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='notionchangelog',
            name='current_snapshot',
        ),
        migrations.RemoveField(
            model_name='notionchangelog',
            name='previous_snapshot',
        ),
        migrations.RemoveField(
            model_name='usernotification',
            name='change_log',
        ),
        migrations.RemoveField(
            model_name='usernotification',
            name='user',
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('change', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notion_monitor.change')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notion_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('in_app_notifications', models.BooleanField(default=True)),
                ('notify_major_changes_only', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notion_notification_preference', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='change',
            name='current_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_changes', to='notion_monitor.pageversion'),
        ),
        migrations.AddField(
            model_name='change',
            name='previous_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previous_changes', to='notion_monitor.pageversion'),
        ),
        migrations.DeleteModel(
            name='NotionPageSnapshot',
        ),
        migrations.DeleteModel(
            name='NotionChangeLog',
        ),
        migrations.DeleteModel(
            name='UserNotification',
        ),
    ]
